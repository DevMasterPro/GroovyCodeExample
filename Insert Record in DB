
import com.resolve.persistence.util.EntityUtil

def condition = "GOOD"
def severity = "GOOD"
def detail = ""
def summary = ""
def result =""
	
	det value = INPUTS.value;
	def table = INPUTS.TABLE_NAME; // getting the table name

	try{
		    		// initialising a map to hold the record
		    	 	Map newEntry = new HashMap()
		    	 	
			      	 if(ticketId)		{ newEntry.put('u_value', value.toString())}  
			 
			 	Map insertResult = EntityUtil.persist(table, newEntry) //persist() will insert an entry, and if there is already something there, it will attempt to update the entry instead
			 			
			 	detail += "\n*****ENTRY*****\n"
						insertResult.each {
							detail += "\t ${it.key}:${it.value}\n"
						}

	}
	// catch block
	catch (Exception ex){	
		result += "Error: \n " + ex.getMessage(); 
	}
	
	// checking if the execution was successfull, if not successfull setting the condition and severity to BAD
	if (result.contains("Error")){	
			condition = "BAD"
			severity = "BAD"
			summary = "Failed to insert record due to database error."
			detail += result
	}
	// if successfull putting the success error message in the summary. 
	else {
		summary = "Successfully stored the record into database."
	}
		
RESULT.condition = condition
RESULT.severity = severity
RESULT.summary = summary
RESULT.detail = detail
